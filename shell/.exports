#!/usr/bin/env bash

# `.exports` is used to provide custom variables.
#
# This file is used as a part of `.shell_env`


# === Compiler flags ===

# This is required because `openssl` is keg-only in `brew`,
# see: `brew info openssl` for more information.
export LDFLAGS="-L $(brew --prefix openssl@1.1)/lib"
export CPPFLAGS="-I $(brew --prefix openssl@1.1)/include"
export CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"
export PKG_CONFIG_PATH="$(brew --prefix openssl@1.1)/lib/pkgconfig"
export PATH="$(brew --prefix openssl@1.1)/bin:$PATH"


# === Path modifications ===

# These lines should be the first ones

# GPG agent:
PATH="/usr/local/opt/gpg2/bin:$PATH"

# Now `python` points to `python3` from `brew`:
PATH="/usr/local/opt/python/libexec/bin:$PATH"

# Adds `pipsi` and `pipx` binary files:
PATH="$HOME/.local/bin:$PATH"

# Adds `poetry` binary, should be added to the end:
PATH="$PATH:$HOME/.poetry/bin"

# postgres utilities like `psql`:
PATH="/usr/local/opt/postgresql/bin:$PATH"

# npm:
PATH="/usr/local/share/npm/bin:$PATH"

# flutter:
PATH="$HOME/.flutter_bin/bin:$PATH"

export PATH

# go:
export GOPATH="$HOME/Go/"
# === General ===

# Editor:
export EDITOR=$(which nano)

# GPG:
export GPG_TTY=$(tty)
eval "$(gpg-agent --daemon --allow-preset-passphrase > /dev/null 2>&1)"

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'

# Homebrew:
export HOMEBREW_NO_ANALYTICS=1  # disables statistics that brew collects

# Ruby build
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

# Pagers:
# This affects every invocation of `less`.
#
#   -i   case-insensitive search unless search string contains uppercase letters
#   -R   color
#   -F   exit if there is less than one page of content
#   -X   keep content on screen after exit
#   -M   show more info at the bottom prompt line
#   -x4  tabs are 4 instead of 8
export LESS="-iRFXMx4"
export PAGER='bat'
export MANPAGER='bat'


# === Virtualenvs ===

export PIPENV_VENV_IN_PROJECT=true # look for `.venv` dir inside project
export PIPENV_HIDE_EMOJIS=true # no emojis!
export PIPENV_COLORBLIND=true # disables colors, so colorful!
export PIPENV_NOSPIN=true # disables spinner for cleaner logs


# === Version managers ===

# nvm:
export NVM_DIR="$HOME/.nvm"
source "/usr/local/opt/nvm/nvm.sh"

# pyenv:
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# rbenv:
eval "$(rbenv init -)"


# === Histories ===

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY="$HOME/.node_history"
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy'

# === Android ===

export ANDROID_HOME=/Users/$USER/Library/Android/sdk
export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

# === starship ===

eval "$(starship init zsh)"

# === GitHub ===

eval "$(gh completion --shell zsh)"


# === Brew ===

if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

    autoload -Uz compinit
    compinit
fi

